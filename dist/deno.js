"use strict";import{serve}from"https://deno.land/std/http/server.ts";let eG=function(a,b=""){return Deno.env.get(a)||b};let pV="Deno";(()=>{var t=function(a=200,l="Lorem",e="Blank."){return new Response(`<!DOCTYPE html><head><meta content="true" name="HandheldFriendly"/><title>${l}</title><style>body{font-family:sans-serif;position:absolute;width:100%;height:100%;background:#fff;margin:0;display:flex;align-items:center;justify-content:center;color:#555}#a{width:max-content;max-width:min(450px,80vw)}#b{text-align:center!important;font-weight:bold;font-size:1.5em;color:#333}#c{color:#333}#a>div{hyphens:auto;text-align:justify;padding:4px}a{text-decoration:none}#d{color:#777;font-size:0.75em}pre{overflow:scroll;padding:2px}@media(prefers-color-scheme:dark){html{filter:invert(100%)}}</style></head><body lang="en"><div id="a"><div id="b">${l}</div><div>${e}</div><div id="d"><center>Cloudhop v${pW}@${pV}</center></div></div></body>`,{status:a,headers:{Server:"Cloud Hop","Content-Type":"text/html"}})};self.pW="0.2";var I=["http:","https:","ws:","wss:"],f=["client","server","loose","asIs"];Array.prototype.random=function(){return this[Math.floor(Math.random()*this.length)]};var d=eG("DEBUGGER","0")=="1",m=eG("BACKENDS","internal").split(","),O=eG("BACKHOST",""),v=eG("MASK_IP","strip"),$=eG("MASK_UA","noBracket"),k=eG("FORCE_IN_TLS","asIs"),w=eG("FORCE_OUT_TLS","asIs"),C=eG("ADAPT_BODY","0")=="1",R=eG("MATCH_LANG","*").split(","),y=Math.max(parseInt(eG("HEALTH_MAX_TRIES","3")),1),_=self.isPersPlat&&Math.max(parseFloat(eG("HEALTH_ACTIVE","5")),15)*1e3,h=eG("HEALTH_CRITERIA","asIs"),g=Math.max(parseInt(eG("TIMEOUT_MS","0")),4e3),P=eG("STRIP_HEADERS_UP","sec-fetch-user").split(","),M=eG("STRIP_HEADERS_DOWN","alt-svc").split(","),u=parseInt(eG("IDLE_SHUTDOWN","60"));u>0?u=Math.max(u,60):u=-1;console.info(`Debug mode: ${d?"on":"off"}`);console.info(`Backends: ${m}`);var x=async function(a,l){if(m.length==1&&m[0]=="internal")return t(503,"Hey, it works!",'<span id="c">Cloud Hop</span> is now deployed to this platform. Please refer to the documentation for further configuration.');let e=new URL(a.url),c=I.indexOf(e.protocol);if(c==-1)return t(400,"Unsupported",`Protocol "${e.protocol}" is not supported by <span id="c">Cloud Hop</span>.`);switch(k){case"plain":{if(c%2==1)return t(400,"HTTPS only","Only HTTPS connections are allowed.");break}case"tls":{if(c%2==0)return t(400,"HTTP only","Only HTTP connections are allowed.");break}}switch(w){case"tls":case"plain":{e.protocol=[(c>>1<<1)+ +(w=="tls")];break}}let r,s=[],o=!0,T=y;for(;T>=0&&o;){if(y<=0)return t(502,"Bad gateway",`All origins are down${d?": "+s:""}.`);let p=m.random(),S=p.lastIndexOf("]"),A=p.lastIndexOf(":");s.push(p),e.hostname=p,e.port="";let i={};i.method=a.method,a.bodyUsed&&(i.body=a.body),i.headers=a.headers;let b=AbortSignal.timeout(g);i.signal=b;let H=new Request(e.toString(),i);try{switch(r=await fetch(e,H),Math.floor(r.status/100)){case 2:{o=!1;break}case 3:{let n=r.headers.get("location");r=t(r.status,"Redirection",`Origin issued an redirect to: <a href="${n}">${n}</a>.`),o=!1;break}case 4:{o=f.indexOf(h)==0;break}case 5:{o=f.indexOf(h)<=1;break}default:o=f.indexOf(h)<=2,o||(r=t(502,"Bad gateway",`All origins are down.${d?" Trace: "+s:""}`))}}catch(n){if(o=f.indexOf(h)<=2,!o)switch(console.error(n.stack),n.constructor.name){case"TypeError":{r=t(502,"Bad gateway",`The last origin is down.${d?" Trace: "+s:""}<br/><pre>${n.stack}</pre>`);break}case"DOMException":{r=t(504,"Timeout",`Gateway timeout after ${g} ms.${d?" Trace: "+s:""}`);break}default:r=t(500,"Unknown error",`<pre>${n.stack}</pre>`)}}T--}return r||t(500,"Empty response",`${o?"Successful":"Failed"} empty response from trace: ${s}.<br/>Last requested URL: ${e.toString()}`)};serve(async function(a,l){let e=l.remoteAddr.hostname;return await x(a,e)});})();
//# sourceMappingURL=deno.js.map
