"use strict";import{serve}from"https://deno.land/std/http/server.ts";let eG=function(a,b=""){return Deno.env.get(a)||b};let pV="Deno";(()=>{var l=function(r=200,s="Lorem",e="Blank."){return new Response(`<!DOCTYPE html><head><meta content="true" name="HandheldFriendly"/><title>${s}</title><style>body{font-family:sans-serif;position:absolute;width:100%;height:100%;background:#fff;margin:0;display:flex;align-items:center;justify-content:center;color:#555}#a{width:max-content;max-width:min(450px,80vw)}#b{text-align:center!important;font-weight:bold;font-size:1.5em;color:#333}#c{color:#333}#a>div{hyphens:auto;text-align:justify;padding:4px}a{text-decoration:none}#d{color:#777;font-size:0.75em}pre{overflow:scroll;padding:2px}@media(prefers-color-scheme:dark){html{filter:invert(100%)}}</style></head><body lang="en"><div id="a"><div id="b">${s}</div><div>${e}</div><div id="d"><center>Cloud Hop v${pW}@${pV}</center></div></div></body>`,{status:r,headers:{Server:"Cloud Hop","Content-Type":"text/html"}})};var g=function(r,s){let e=new Set;return s?.length>0&&s.forEach(function(o){o.length>0&&e.add(o.toLowerCase())}),r.forEach(function(o){o.length>0&&e.add(o.toLowerCase())}),e},H=async function(r,s,e={}){let o={},p=r.body;s?.constructor!=Function&&(s=function(t,a){return[t,a]}),r.headers.forEach(function(t,a){let i=s(a.toLowerCase(),t);o[i[0]]=i[1]}),e?.strip?.size>0&&e.strip.forEach(function(t){console.debug(`Removed header: ${t}`),delete o[t]});let n=Object.keys(e?.set||{});return n.length>0&&n.forEach(function(t){o[t.toLowerCase()]=e.set[t]}),new Response(p,{status:r.status,headers:o})};self.pW="0.2";var C=["http:","https:","ws:","wss:"],u=["client","server","loose","asIs"];Array.prototype.random=function(){return this[Math.floor(Math.random()*this.length)]};var c=eG("DEBUGGER","0")=="1",T=eG("BACKENDS","internal").split(","),P=eG("BACKHOST",""),U=eG("MASK_IP","strip"),M=eG("MASK_UA","noBracket"),I=eG("FORCE_IN_TLS","asIs"),b=eG("FORCE_OUT_TLS","asIs"),D=eG("ADAPT_BODY","0")=="1",B=eG("MATCH_LANG","*").split(","),y=Math.max(parseInt(eG("HEALTH_MAX_TRIES","3")),1),F=self.isPersPlat&&Math.max(parseFloat(eG("HEALTH_ACTIVE","5")),15)*1e3,m=eG("HEALTH_CRITERIA","asIs"),x=Math.max(parseInt(eG("TIMEOUT_MS","0")),2500),j=g(eG("STRIP_HEADERS_UP","sec-fetch-user").split(",")),k=g(eG("STRIP_HEADERS","").split(","),["alt-svc"]);var A,w=parseInt(eG("IDLE_SHUTDOWN","60"));w>0?w=Math.max(w,60)*1e3:w=-1;console.info(`Debug mode: ${c?"on":"off"}`);console.info(`Backends: ${T}`);var S=async function(r,s){if(T.length==1&&T[0]=="internal")return l(503,"Hey, it works!",'<span id="c">Cloud Hop</span> is now deployed to this platform. Please refer to the documentation for further configuration.');let e=new URL(r.url),o=C.indexOf(e.protocol);if(o==-1)return l(400,"Unsupported",`Protocol "${e.protocol}" is not supported by <span id="c">Cloud Hop</span>.`);switch(I){case"plain":{if(o%2==1)return l(400,"HTTPS only","Only HTTPS connections are allowed.");break}case"tls":{if(o%2==0)return l(400,"HTTP only","Only HTTP connections are allowed.");break}}switch(b){case"tls":case"plain":{e.protocol=[(o>>1<<1)+ +(b=="tls")];break}}let p=A||{},n,t=[],a=!0,i=y;for(;i>=0&&a;){if(y<=0)return l(502,"Bad gateway",`All origins are down${c?": "+t:""}.`);let f=T.random(),R=f.lastIndexOf("]"),O=f.lastIndexOf(":");t.push(f),e.hostname=f,e.port="",c&&console.info(`Tries: ${i}, target: ${r.method} ${e.protocol}//${f}/`);let h={};h.method=r.method,r.bodyUsed&&(h.body=r.body),h.headers=r.headers;let E=AbortSignal.timeout(x);h.signal=E;let $=new Request(e.toString(),h);try{switch(n=await fetch(e,$),Math.floor(n.status/100)){case 2:{a=!1;break}case 3:{let d=n.headers.get("location");n=l(n.status,"Redirection",`Origin issued an redirect to: <a href="${d}">${d}</a>.`),a=!1;break}case 4:{a=u.indexOf(m)==0;break}case 5:{a=u.indexOf(m)<=1;break}default:a=u.indexOf(m)<=2,a||(n=l(502,"Bad gateway",`All origins are down.${c?" Trace: "+t:""}`))}}catch(d){if(a=u.indexOf(m)<=2,!a)switch(console.error(d.stack),d.constructor.name){case"TypeError":{n=l(502,"Bad gateway",`The last origin is down.${c?" Trace: "+t:""}<br/><pre>${d.stack}</pre>`);break}case"DOMException":{n=l(504,"Timeout",`Gateway timeout after ${x} ms.${c?" Trace: "+t:""}`);break}default:n=l(500,"Unknown error",`<pre>${d.stack}</pre>`)}}c&&(p["X-CloudHop-Target"]=f,p["X-CloudHop-Health"]=`${i}/${y}`,p["X-CloudHop-Trace"]=t.toString()),i--}return await H(n,!1,{strip:k,set:p})||l(500,"Empty response",`${a?"Successful":"Failed"} empty response from trace: ${t}.<br/>Last requested URL: ${e.toString()}`)};serve(async function(r,s){let e=s.remoteAddr.hostname;return await S(r,e)});})();
//# sourceMappingURL=deno.js.map
