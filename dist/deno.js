"use strict";import {serve} from "https://deno.land/std/http/server.ts";let eG=function(a,b=""){return Deno.env.get(a)||b};(()=>{var a=function(e,t){return`<!DOCTYPE html><head><meta content="true" name="HandheldFriendly"/><title>${e}</title><style>*{font-family:sans-serif;color:#555}body{position:absolute;width:100%;height:100%;background:#fff;margin:0;display:flex;align-items:center;justify-content:center}#a{width:max-content;max-width:min(450px,80vw)}#b{text-align:center!important;font-weight:bold;font-size:2em;color:#333}#c{color:#333}#a>div{hyphens:auto;text-align:justify;padding:4px}</style></head><body lang="en"><div id="a"><div id="b">${e}</div><div>${t}</div></div></body>`};Array.prototype.random=function(){return this[Math.floor(Math.random()*this.length)]};var l={Server:"Cloud Hop","Content-Type":"text/html"},m=eG("DEBUGGER","0")=="1",r=eG("BACKENDS","internal").split(","),c=eG("BACKHOST",""),h=eG("MASK_IP","give"),u=eG("MASK_UA","noBracket"),f=eG("FORCE_IN_TLS","asIs"),y=eG("FORCE_OUT_TLS","asIs"),A=eG("ADAPT_BODY","0")=="1",H=eG("MATCH_LANG","*").split(","),g=Math.max(parseInt(eG("HEALTH_MAX_TRIES","3")),1),T=self.isPersPlat&&Math.max(parseFloat(eG("HEALTH_ACTIVE","5")),15)*1e3,G=eG("HEALTH_CRITERIA","asIs"),o=async function(e,t){if(r.length==1&&r[0]=="internal")return new Response(a("Hey, it works!",'<span id="c">Cloud Hop</span> is now deployed to this platform. Please refer to the documentation for further configuration.'),{status:503,headers:l});let n=new URL(e.url),i,s=[];return i||new Response("Empty respose.",{status:500})};serve(async function(e,t){let n=t.remoteAddr.hostname;return await o(e,n)});})();
//# sourceMappingURL=deno.js.map
