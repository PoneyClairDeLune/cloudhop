"use strict";import{serve}from"https://deno.land/std/http/server.ts";let eG=function(a,b=""){return Deno.env.get(a)||b};let pV="Deno";(()=>{var l=function(r=200,o="Lorem",e="Blank."){return new Response(`<!DOCTYPE html><head><meta content="true" name="HandheldFriendly"/><title>${o}</title><style>body{font-family:sans-serif;position:absolute;width:100%;height:100%;background:#fff;margin:0;display:flex;align-items:center;justify-content:center;color:#555}#a{width:max-content;max-width:min(450px,80vw)}#b{text-align:center!important;font-weight:bold;font-size:1.5em;color:#333}#c{color:#333}#a>div{hyphens:auto;text-align:justify;padding:4px}a{text-decoration:none}#d{color:#777;font-size:0.75em}pre{overflow:scroll;padding:2px}@media(prefers-color-scheme:dark){html{filter:invert(100%)}}</style></head><body lang="en"><div id="a"><div id="b">${o}</div><div>${e}</div><div id="d"><center>Cloud Hop v${pW}@${pV}</center></div></div></body>`,{status:r,headers:{Server:"Cloud Hop","Content-Type":"text/html"}})};Object.forEach=function(r,o){Object.keys(r).forEach(function(t){o(r[t],t,r)})};var g=function(r,o){let e=new Set;return o?.length>0&&o.forEach(function(t){t.length>0&&e.add(t.toLowerCase())}),r.forEach(function(t){t.length>0&&e.add(t.toLowerCase())}),e},T=function(r,o){let e={};return Object.forEach(o||{},function(t,a){e[a.toLowerCase()]=t}),r.split(",").forEach(function(t){let a=t.indexOf("=");a<t.length-1&&(e[t.slice(0,a).toLowerCase()]=t.slice(a+1))}),e},b=function(r,o){let e={};r.forEach(function(a,s){e[s.toLowerCase()]=a}),o?.strip?.size>0&&o.strip.forEach(function(a){delete e[a]});let t=Object.keys(o?.set||{});return t.length>0&&t.forEach(function(a){e[a.toLowerCase()]=o.set[a]}),e},S=async function(r,o,e={}){let t={},a=r.body;o?.constructor!=Function&&(o=function(n,i){return[n,i]}),r.headers.forEach(function(n,i){let c=o(i.toLowerCase(),n);t[c[0].toLowerCase()]=c[1]}),e?.strip?.size>0&&e.strip.forEach(function(n){delete t[n]});let s=Object.keys(e?.set||{});return s.length>0&&s.forEach(function(n){t[n.toLowerCase()]=e.set[n]}),new Response(a,{status:r.status,headers:t})};self.pW="0.2";var I=["http:","https:","ws:","wss:"],u=["client","server","loose","asIs"];Array.prototype.random=function(){return this[Math.floor(Math.random()*this.length)]};var d=eG("DEBUGGER","0")=="1",y=eG("BACKENDS","internal").split(","),j=eG("BACKHOST",""),q=eG("MASK_IP","strip"),F=eG("MASK_UA","noBracket"),R=eG("FORCE_IN_TLS","asIs"),x=eG("FORCE_OUT_TLS","asIs"),N=eG("ADAPT_BODY","0")=="1",X=eG("MATCH_LANG","*").split(","),E=Math.max(parseInt(eG("HEALTH_MAX_TRIES","3")),1),z=self.isPersPlat&&Math.max(parseFloat(eG("HEALTH_ACTIVE","5")),15)*1e3,m=eG("HEALTH_CRITERIA","asIs"),C=Math.max(parseInt(eG("TIMEOUT_MS","0")),2500),$=g(eG("STRIP_HEADERS_UP","").split(","),["host"]),G=g(eG("STRIP_HEADERS","").split(","),["alt-svc"]),L=T(eG("SET_HEADERS_UP","")),_=T(eG("SET_HEADERS","")),w=parseInt(eG("IDLE_SHUTDOWN","60"));w>0?w=Math.max(w,60)*1e3:w=-1;console.info(`Debug mode: ${d?"on":"off"}`);console.info(`Backends: ${y}`);var O=async function(r,o){if(y.length==1&&y[0]=="internal")return l(503,"Hey, it works!",'<span id="c">Cloud Hop</span> is now deployed to this platform. Please refer to the documentation for further configuration.');let e=new URL(r.url),t=I.indexOf(e.protocol);if(t==-1)return l(400,"Unsupported",`Protocol "${e.protocol}" is not supported by <span id="c">Cloud Hop</span>.`);switch(R){case"plain":{if(t%2==1)return l(400,"HTTPS only","Only HTTPS connections are allowed.");break}case"tls":{if(t%2==0)return l(400,"HTTP only","Only HTTP connections are allowed.");break}}switch(x){case"tls":case"plain":{e.protocol=[(t>>1<<1)+ +(x=="tls")];break}}let a=_||{},s,n=[],i=!0,c=E,H;for(;c>=0&&i;){if(E<=0)return l(502,"Bad gateway",`All origins are down${d?": "+n:""}.`);let p=y.random(),v=p.lastIndexOf("]"),U=p.lastIndexOf(":");n.push(p),e.hostname=p,e.port="",d&&console.info(`Tries: ${c}, target: ${r.method} ${e.protocol}//${p}/`);let h={};h.method=r.method,r.bodyUsed&&(h.body=r.body),h.headers=b(r.headers,{strip:$,set:L}),d&&(H=h.headers);let k=AbortSignal.timeout(C);h.signal=k;let A=new Request(e.toString(),h);try{switch(s=await fetch(e,A),Math.floor(s.status/100)){case 2:{i=!1;break}case 3:{let f=s.headers.get("location");s=l(s.status,"Redirection",`Origin issued an redirect to: <a href="${f}">${f}</a>.`),i=!1;break}case 4:{i=u.indexOf(m)==0;break}case 5:{i=u.indexOf(m)<=1;break}default:i=u.indexOf(m)<=2,i||(s=l(502,"Bad gateway",`All origins are down.${d?" Trace: "+n:""}`))}}catch(f){if(i=u.indexOf(m)<=2,!i)switch(console.error(f.stack),f.constructor.name){case"TypeError":{s=l(502,"Bad gateway",`The last origin is down.${d?" Trace: "+n:""}<br/><pre>${f.stack}</pre>`);break}case"DOMException":{s=l(504,"Timeout",`Gateway timeout after ${C} ms.${d?" Trace: "+n:""}`);break}default:s=l(500,"Unknown error",`<pre>${f.stack}</pre>`)}}d&&(a["X-CloudHop-Target"]=p,a["X-CloudHop-Health"]=`${c}/${E}`,a["X-CloudHop-Trace"]=n.toString(),a["X-CloudHop-Up"]=JSON.stringify(H),console.debug(JSON.stringify(a))),c--}return await S(s,!1,{strip:G,set:a})||l(500,"Empty response",`${i?"Successful":"Failed"} empty response from trace: ${n}.<br/>Last requested URL: ${e.toString()}`)};serve(async function(r,o){let e=o.remoteAddr.hostname;return await O(r,e)});})();
//# sourceMappingURL=deno.js.map
